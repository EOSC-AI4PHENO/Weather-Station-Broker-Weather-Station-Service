app:
    port: 8202
    eurekaHostname: http://localhost
    eurekaPort: 8761
    databaseLogin: postgres
    databasePassword: postgres
    migration: true
    repair: false
    reinstall: false

server:
    port: ${app.port}
    error:
      include-message: always

logging:
    level:
        ROOT: INFO
        com:
            siseth:
                weatherStation: DEBUG
        org:
            hibernate:
                SQL: INFO
    file:
        name: logs/weatherStation.log

springdoc:
    api-docs:
        path: /api/weather-station/station/v3/api-docs
eureka:
    client:
        fetchRegistry: true
        registerWithEureka: true
        serviceUrl:
          defaultZone: ${EUREKA_URI:${app.eurekaHostname}:${app.eurekaPort}/eureka}
    instance:
        preferIpAddress: true
        hostname: localhost
spring:
    application:
        name: weather-station-service
    mvc:
        pathmatch:
          matching-strategy: ANT_PATH_MATCHER
    jackson:
        serialization:
            write-dates-as-timestamps: false
        time-zone: Europe/Warsaw
    jpa:
        hibernate:
          ddl-auto: validate
          database: postgresql
          naming:
            physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
        properties:
          hibernate:
            hibernate.order_by.default_null_ordering: last
            dialect: org.hibernate.dialect.PostgreSQLDialect
            jdbc:
              lob:
                non_contextual_creation: true
        show-sql: false
    datasource:
      driver-class-name: org.postgresql.Driver
      url: jdbc:postgresql://10.0.5.230:5432/weatherStation
      username: ${app.databaseLogin}
      password: ${app.databasePassword}

